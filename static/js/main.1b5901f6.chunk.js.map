{"version":3,"sources":["styles/useStyles.js","axios/axios.js","components/FilterMenu.js","components/ConferenceCard.js","components/ConferenceCards.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","navBar","boxShadow","fontWeight","icon","marginRight","spacing","color","scale","cardGrid","paddingTop","paddingBottom","maxWidth","card","height","display","flexDirection","transition","transform","cardMedia","cardContent","flexGrow","backgroundColor","menuBar","alignItems","marginBottom","borderRadius","marginTop","searchButton","marginLeft","confName","fontSize","confVenue","confWebsite","confDate","freeConf","paidConf","instance","axios","create","baseURL","timeout","options","FilterMenu","filterBy","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","event","current","contains","target","Grid","container","direction","item","xs","ButtonGroup","variant","ref","Button","onClick","console","info","size","undefined","prevOpen","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","map","option","index","MenuItem","selected","log","handleMenuItemClick","memo","ConferenceCard","imgUrl","classes","sm","md","Card","className","CardMedia","image","imageURL","replace","title","CardContent","Typography","gutterBottom","component","entryType","venue","Link","window","confUrl","confStartDate","ConferenceCards","freeConferences","setFreeConferences","paidConferences","setPaidConferences","searchedConferences","setSearchedConferences","showFree","setShowFree","showPaid","setShowPaid","searchInput","setSearchInput","useEffect","get","then","response","data","free","paid","catch","error","Fragment","Container","placeItems","TextField","value","onChange","e","IconButton","allConferences","concat","searchResults","filter","conf","toLowerCase","includes","city","handleSearch","filterType","handleFilter","length","conference_id","Math","random","Header","AppBar","Toolbar","noWrap","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b5901f6.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navBar: {\r\n    boxShadow: \"0px 2px 10px 3px black\",\r\n    // position: \"fixed\",\r\n    fontWeight: 800,\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(3),\r\n    color: \"white\",\r\n    scale: 1.5,\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(8),\r\n    maxWidth: \"90%\",\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    transition: \"all 0.4s ease-in-out\",\r\n    \"&:hover\": { transform: \" scale(1.02)\" },\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  menuBar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n    height: \"5vh\",\r\n    backgroundColor: \"white\",\r\n    marginBottom: \"20px\",\r\n    boxShadow:\r\n      \"7px 5px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n    borderRadius: \"3px\",\r\n    marginTop: \"8vh\",\r\n  },\r\n  searchButton: {\r\n    marginLeft: \"5px\",\r\n  },\r\n  confName: {\r\n    fontWeight: 800,\r\n    fontSize: \"20px\",\r\n  },\r\n  confVenue: {\r\n    fontWeight: 600,\r\n    fontSize: \"15px\",\r\n  },\r\n  confWebsite: {\r\n    fontWeight: 600,\r\n    fontSize: \"15px\",\r\n  },\r\n  confDate: { fontWeight: 600, fontSize: \"15px\" },\r\n  freeConf: { color: \"green\", fontSize: \"13px\" },\r\n  paidConf: { color: \"orange\", fontSize: \"13px\" },\r\n}));\r\n\r\nexport default useStyles;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL:\r\n    \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\",\r\n  timeout: 5000,\r\n});\r\n\r\nexport default instance;\r\n","import React, { memo, useRef, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\n\r\n// Options array for introducing Filter options in Button Group dropdown\r\nconst options = [\"Both\", \"Free\", \"Paid\"];\r\n\r\nconst FilterMenu = ({ filterBy }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    filterBy(options[index]);\r\n    console.log(index);\r\n    console.log(options[index]);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction='column' alignItems='center'>\r\n      <Grid item xs={12}>\r\n        <ButtonGroup\r\n          variant='contained'\r\n          color='primary'\r\n          ref={anchorRef}\r\n          aria-label='split button'\r\n        >\r\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n          <Button\r\n            color='primary'\r\n            size='small'\r\n            aria-controls={open ? \"split-button-menu\" : undefined}\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            aria-label='select merge strategy'\r\n            aria-haspopup='menu'\r\n            onClick={handleToggle}\r\n          >\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList id='split-button-menu'>\r\n                    {options.map((option, index) => (\r\n                      <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                      >\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default memo(FilterMenu);\r\n","import React, { memo } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"../styles/useStyles\";\r\nimport { Link } from \"@material-ui/core\";\r\n\r\nfunction ConferenceCard({ card }) {\r\n  const classes = useStyles();\r\n\r\n  // Image URL is having extra slash and double quote because of which images were not loading\r\n  const formattedImageUrl = (imgUrl) => {\r\n    const imgURL = imgUrl;\r\n    let str = imgURL.replace(/\\\"/g, \"\");\r\n    return str;\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={10} sm={6} md={3}>\r\n      <Card\r\n        className={classes.card}\r\n        style={{\r\n          // style was not getting applied from styles file\r\n          boxShadow:\r\n            \"10px 10px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n        }}\r\n      >\r\n        <CardMedia\r\n          className={classes.cardMedia}\r\n          image={`${formattedImageUrl(card.imageURL)}`}\r\n          title='conference poster'\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant='h5' component='h2'>\r\n            <p className={classes.confName}>\r\n              {card.confName}{\" \"}\r\n              <span\r\n                style={{ fontSize: \"12px\" }}\r\n                className={`${\r\n                  card.entryType === \"Free\"\r\n                    ? classes.freeConf\r\n                    : classes.paidConf\r\n                }`}\r\n              >\r\n                [{card.entryType === \"Free\" ? \"Free\" : \"Paid\"}]\r\n              </span>{\" \"}\r\n            </p>\r\n            <p className={classes.confVenue}>Venue : {card.venue}</p>\r\n            <p className={classes.confWebsite}>\r\n              Website :{\" \"}\r\n              <Link\r\n                onClick={() => {\r\n                  window.open(card.confUrl, \"_blank\", \"noopener,noreferrer\");\r\n                }}\r\n              >\r\n                {card.confUrl}\r\n              </Link>\r\n            </p>\r\n            <p className={classes.confDate}>Date :- {card.confStartDate}</p>\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default memo(ConferenceCard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport useStyles from \"../styles/useStyles\";\r\nimport axios from \"../axios/axios\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport FilterMenu from \"./FilterMenu\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ConferenceCard from \"./ConferenceCard\";\r\n\r\nconst ConferenceCards = () => {\r\n  const [freeConferences, setFreeConferences] = useState([]);\r\n  const [paidConferences, setPaidConferences] = useState([]);\r\n  const [searchedConferences, setSearchedConferences] = useState([]);\r\n  const [showFree, setShowFree] = useState(true);\r\n  const [showPaid, setShowPaid] = useState(true);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  // Dependency array is kept empty so that this will fetch data only once. We can persist data if required using local storage or redux-persist\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"\")\r\n      .then((response) => {\r\n        const { free, paid } = response.data;\r\n        setFreeConferences(free);\r\n        setPaidConferences(paid);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // Function for handling filter I can also implement this using useReducer\r\n  const handleFilter = (filterType) => {\r\n    console.log(filterType);\r\n    if (filterType === \"Both\") {\r\n      setShowPaid(true);\r\n      setShowFree(true);\r\n    } else if (filterType === \"Free\") {\r\n      setShowPaid(false);\r\n      setShowFree(true);\r\n    } else {\r\n      setShowPaid(true);\r\n      setShowFree(false);\r\n    }\r\n  };\r\n\r\n  // Function for handling search\r\n  const handleSearch = () => {\r\n    if (searchInput !== \"\") {\r\n      console.log(searchInput);\r\n      const allConferences = freeConferences.concat(paidConferences);\r\n      const searchResults = allConferences.filter(\r\n        (conf) =>\r\n          conf.confName.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n          conf.city.toLowerCase().includes(searchInput.toLowerCase())\r\n      );\r\n      console.log(allConferences);\r\n      console.log(searchResults);\r\n      setSearchedConferences(searchResults);\r\n    }\r\n  };\r\n\r\n  // Function for clearing search\r\n  const handleClearSearch = () => {\r\n    setSearchedConferences([]);\r\n    setSearchInput(\"\");\r\n  };\r\n\r\n  // Styling using const parameters decalred in styles.js\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    // A common pattern in React is for a component to return multiple elements.\r\n    // Fragments let you group a list of children without adding extra nodes to the DOM.\r\n    <React.Fragment>\r\n      <main>\r\n        <Container className={classes.cardGrid}>\r\n          <Grid item xs={12} className={classes.menuBar}>\r\n            <div\r\n              style={{\r\n                marginRight: \"10px\",\r\n                display: \"flex\",\r\n                placeItems: \"center\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                id='standard-basic'\r\n                value={searchInput}\r\n                onChange={(e) => {\r\n                  setSearchInput(e.target.value);\r\n                }}\r\n              />\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleClearSearch();\r\n                }}\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                className={classes.searchButton}\r\n                onClick={() => {\r\n                  handleSearch();\r\n                }}\r\n              >\r\n                Search\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <FilterMenu\r\n                filterBy={(filterType) => {\r\n                  handleFilter(filterType);\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {searchedConferences.length === 0 &&\r\n              showFree === true &&\r\n              freeConferences &&\r\n              freeConferences.map((card) => (\r\n                <ConferenceCard\r\n                  key={`${card.confName}${card.conference_id}`}\r\n                  card={card}\r\n                />\r\n              ))}\r\n            {searchedConferences.length === 0 &&\r\n              showPaid === true &&\r\n              paidConferences &&\r\n              paidConferences.map((card) => (\r\n                <ConferenceCard\r\n                  key={`${card.confName}${card.conference_id}${Math.random()}`}\r\n                  card={card}\r\n                />\r\n              ))}\r\n            {searchedConferences.length > 0 &&\r\n              showPaid === true &&\r\n              paidConferences &&\r\n              searchedConferences.map((card) => (\r\n                <ConferenceCard\r\n                  key={`${card.confName}${card.conference_id}${Math.random()}`}\r\n                  card={card}\r\n                />\r\n              ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ConferenceCards;\r\n","import React, { memo } from \"react\";\r\nimport useStyles from \"../styles/useStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\";\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar className={classes.navBar}>\r\n      <Toolbar>\r\n        <RecordVoiceOverIcon className={classes.icon} />\r\n        <Typography variant='h4' color='inherit' noWrap>\r\n          Risher Tech Conferences\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default memo(Header);\r\n","import \"../styles/App.css\";\nimport ConferenceCards from \"./ConferenceCards\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <div className='app'>\n      {/* Header */}\n      <Header />\n      {/* Conference Cards */}\n      <ConferenceCards />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}